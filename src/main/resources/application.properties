spring.application.name=polySpringBootProject
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# MySQL 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# DB Source URL
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/projectEx?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul
# DB username
spring.datasource.username=root
# DB password
spring.datasource.password=1234
# true 설정시 JPA 쿼리문 확인 가능
spring.jpa.show-sql=true
# DDL(create, alter, drop) 정의시 DB의 고유 기능을 사용할 수 있다.
# create : 실행시 테이블삭제 후 재생성, update : 기존 유지하면서 테이블 업데이트
# create-drop : 종료시 테이블 삭제, validate : 엔티티 매핑과 db 테이블이 일치하는지 검증 후 실행
# 개발단계 : update, 테스트 : creatt-drop, 프로덕션 단계 : validate 또는 none
spring.jpa.hibernate.ddl-auto=update
# JPA의 구현체인 Hibernate가 동작하면서 발생한 SQL의 가독성을 높여준다.
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# 세션 유지 시간을 설정
server.servlet.session.timeout=600

server.error.path=/error
server.error.include-exception=true

# 최대 파일 크기 설정 (10MB 예시)
spring.servlet.multipart.max-file-size=10MB
# 최대 요청 크기 설정 (10MB 예시)
spring.servlet.multipart.max-request-size=10MB



